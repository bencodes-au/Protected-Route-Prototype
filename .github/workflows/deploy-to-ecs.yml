name: Deploy to ECS

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    name: Build & Deploy to AWS ECS
    runs-on: ubuntu-latest

    environment:
      name: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set environment variables
        run: |
          echo "AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
          echo "FRONTEND_IMAGE=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/protected-route-frontend:latest" >> $GITHUB_ENV
          echo "BACKEND_IMAGE=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/protected-route-backend:latest" >> $GITHUB_ENV

      - name: Build, tag, and push frontend Docker image
        run: |
          docker build -f Dockerfile.frontend -t frontend .
          docker tag frontend:latest $FRONTEND_IMAGE
          docker push $FRONTEND_IMAGE

      - name: Build, tag, and push backend Docker image
        run: |
          docker build -f Dockerfile.backend -t backend .
          docker tag backend:latest $BACKEND_IMAGE
          docker push $BACKEND_IMAGE

      - name: Update backend task definition with new image
        run: |
          sed "s|IMAGE_PLACEHOLDER|$BACKEND_IMAGE|" ecs-task-def-backend.template.json > ecs-task-def-backend.json

      - name: Update frontend task definition with new image
        run: |
          sed "s|IMAGE_PLACEHOLDER|$FRONTEND_IMAGE|" ecs-task-def-frontend.template.json > ecs-task-def-frontend.json

      - name: Deploy backend to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-def-backend.json
          service: ${{ secrets.ECS_BACKEND_SERVICE_NAME }}
          cluster: ${{ secrets.ECS_CLUSTER_NAME }}
          wait-for-service-stability: true

      - name: Deploy frontend to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-def-frontend.json
          service: ${{ secrets.ECS_FRONTEND_SERVICE_NAME }}
          cluster: ${{ secrets.ECS_CLUSTER_NAME }}
          wait-for-service-stability: true
